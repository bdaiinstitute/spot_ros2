load("@humble//ros:defs.bzl", "ros")
load("@aspect_rules_py//py:defs.bzl", "resolutions")
load("@pip//:requirements.bzl", "all_whl_requirements_by_package", "requirement")

package(default_visibility = ["//visibility:public"])

ros.package_manifest(
    name = "pkg",
    package_name = "spot_examples",
)

py_library(
    name = "simple_spot_commander_lib",
    srcs = ["spot_examples/simple_spot_commander.py"],
    imports = ["spot_examples"],
    deps = [
        "@humble//:ros-humble-rclpy",
        "@ros_utilities//synchros2",
        "@humble//:ros-humble-rcl-interfaces",
        "@humble//:ros-humble-std-srvs",
    ]
)

ros.py_binary(
    name = "simple_spot_commander",
    srcs = ["spot_examples/simple_spot_commander.py"],
    imports = ["spot_examples"],
    deps = [
        "@humble//:ros-humble-rclpy",
        "@ros_utilities//synchros2",
        "@humble//:ros-humble-rcl-interfaces",
        "@humble//:ros-humble-std-srvs",
    ],
    package = ":pkg",
    # this serves to provide concrete labels to virtual deps indicated by dependencies
    # (I think ros_utilities in this case)
    # to be honest, I'm just following an example for this and I don't really know how it works
    resolutions = resolutions.from_requirements(all_whl_requirements_by_package, requirement),
    # I'm concerned that we have to do this everywhere, and I think we should try to get to the 
    # bottom of it
    package_collisions = "warning",
)

ros.py_binary(
    name = "arm_simple",
    package = ":pkg",
    srcs = ["spot_examples/arm_simple.py"],
    deps = [
        "@ros_utilities//synchros2",
        "@pip//bosdyn_api",
        "@pip//bosdyn_client",
        "@humble//:bosdyn-msgs",
        "@humble//:ros-humble-rclpy",
        "@humble//:spot-msgs",
        ":simple_spot_commander_lib",
        "@humble//:bosdyn-api-msgs",
        "@humble//:proto2ros",
        "@humble//:bosdyn-auto-return-api-msgs",
        "@humble//:bosdyn-autowalk-api-msgs",
        "@humble//:bosdyn-spot-api-msgs",
        "@humble//:bosdyn-graph-nav-api-msgs",
        "@humble//:bosdyn-mission-api-msgs",
        "@humble//:bosdyn-spot-cam-api-msgs",
    ],
    # this serves to provide concrete labels to virtual deps indicated by dependencies
    # (I think ros_utilities in this case)
    # to be honest, I'm just following an example for this and I don't really know how it works
    resolutions = resolutions.from_requirements(all_whl_requirements_by_package, requirement),
    # I'm concerned that we have to do this everywhere, and I think we should try to get to the 
    # bottom of it
    package_collisions = "warning",
)

ros.py_binary(
    name = "arm_with_body_follow",
    package = ":pkg",
    srcs = ["spot_examples/arm_with_body_follow.py"],
    deps = [
        "@ros_utilities//synchros2",
        "@pip//bosdyn-api",
        "@pip//bosdyn-client",
        "@humble//:ros-humble-bosdyn-msgs",
        "@humble//:ros-humble-rclpy",
        "@humble//:ros-humble-spot-msgs", # TODO(astout): does not exist yet
        ":simple_spot_commander_lib",
    ]
)
