module(
    name = "spot_ros2",
    version = "0.0.0", # TODO(astout) is there a version somewhere we can reference?
    compatibility_level = 1,
)

############### BAZEL DEPS ########################
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_distroless", version = "0.5.1")
bazel_dep(name = "rules_python", version = "0.40.0") # transitive dep of r_r_r, not sure why I need to include here
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_multirun", version = "0.11.0")
bazel_dep(name = "aspect_rules_py", version = "1.3.4")
bazel_dep(name = "rules_uv", version = "0.71.0")
# use rules_rai_ros
# Until we have our own Bazel registry, this will need to be an override
bazel_dep(name = "rules_rai_ros")
git_override(
    module_name = "rules_rai_ros",
    commit = "9177aa7244b2e3bacfd210568a2d55b895f3fb91",
    remote = "https://github.com/bdaiinstitute/rules_rai_ros.git",
)

# only used for testing
bazel_dep(name = "googletest", version = "1.16.0.bcr.1", dev_dependency = True)


############### PYTHON SETUP ######################
# I'm a little hazy on why I need to declare this directly.

PYTHON_VERSION = "3.10"
ARCHITECTURES = ("x86_64", "aarch64")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    is_default = True,
    python_version = PYTHON_VERSION,
)
use_repo(python, "python_3_10")

# This dictionary specifies which Python dependency "contexts" exist and what
# platform specific lock files should be created.
#
# Available platform architectures: "x86_64", "aarch64"
#
# The context names should match the standardized names of the `.in` files in
# this directory. Specifically: `requirements_<CONTEXT>.in`.  Lock files will
# be generated in the `locks` subdirectory with names following this convention:
# `requirements_<CONTEXT>_<ARCH>.lock`.
#
# This dictionary must match the one in deps/python/BUILD.bazel!
LOCKFILE_PLATFORMS = {
    # CONTEXT : ( ARCHITECTURES )
    "main": ("x86_64", "aarch64"),
}

REQUIREMENT_CYCLES = {
    "main": {},
}

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

[
    pip.parse(
        enable_implicit_namespace_pkgs = True,  # disable automatic __init__.py creation
        hub_name = "pip{}".format("_" + context if context != "main" else ""),
        python_version = PYTHON_VERSION,
        requirements_by_platform = {
            "//deps/python/locks:requirements_{}_{}.lock".format(context, arch): "linux_{}".format(arch)
            for arch in LOCKFILE_PLATFORMS[context]
        },
        experimental_requirement_cycles = REQUIREMENT_CYCLES[context],
    )
    for context in LOCKFILE_PLATFORMS
]

[
    use_repo(pip, "pip{}".format("_" + context if context != "main" else ""))
    for context in LOCKFILE_PLATFORMS
]

############### DISTROLESS SETUP ##################
apt = use_extension("@rules_distroless//apt:extensions.bzl", "apt")
apt.install(
    name = "jammy",
    lock = "//:jammy.lock.json",
    manifest = "//:jammy.yaml",
)
use_repo(apt, "jammy")


############### ROS SETUP #########################
ros = use_extension("@rules_rai_ros//ros:extensions.bzl", "ros")
ros.parse(
    name = "humble",
    lock = "//:jammy.lock.json",
)
ros.additional_deb(
    hub_name = "humble",
    name = "spot-cpp-sdk",
    # TODO(astout) add arm64   
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/spot-cpp-sdk/releases/download/v5.0.0/spot-cpp-sdk_5.0.0_amd64.deb"]},
    sha256_by_arch = {"amd64": "6e23f7385c1b66618be0e68836c5b614a6edc67a381e2c6d9a213a6ecc044583"},
    dependencies = [
        "libcli11-dev",
        "libgrpc++-dev",
        "libprotobuf-dev"
    ],
    cc_includes = ["opt/spot-cpp-sdk/include"],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "97a7d5300083a9a510fd462146cdb31df20dbd2412b6dba2a381dd5f9d8fefa7"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-auto-return-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-auto-return-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "866cecf22464ac622cd822d99f0aa1daef3dacc0b01ffd68c350b94d3a309fe0"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-autowalk-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-autowalk-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "43eee1ca83ed825cdc9fb648d209faffb12558a87c1c643108497ef1207e2818"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-cmake-module",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-cmake-module_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "94fe18b0dc1e452c54821d5dd03f983c1f3e10d2854e3aaf2d5f3fadf1eb4c7a"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-graph-nav-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-graph-nav-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "24f3fcbc5eda2521a3e2f00b94ea51521a956c1f3b9a36ba348e367f907315f9"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-keepalive-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-keepalive-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "a72e2861d973716f894c2753048177c2050492f2262a226ebe5d31795c8c1d1f"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-log-status-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-log-status-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "69a69076432b49a4eb763219da5a007193bdac5bc127aab84cc59a7c7e20f2c3"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-metrics-logging-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-metrics-logging-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "70e200e4b3bac00d3dc58c1c152efe2e9a446505e16cef5a30325cef0d59e473"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-mission-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-mission-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "585239d37b64d746a625336a04a6cd7bb35a7a861279fc1d59a98e1bbf0990ef"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "d7b53a8d19eabd680f4b35fba7846b32f278f03fd6560b226abcebddb8c0bee2"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-spot-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-spot-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "d1ef79c663a671230d8faa3fbf3ce6c4f77cffa2d0cfa970a12efcf6490a9610"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "bosdyn-spot-cam-api-msgs",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-bosdyn-spot-cam-api-msgs_5.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "fad965383ccbae634daaeb12fcf982de6dbabe39773bd48be22f55164ee9be7f"},
    dependencies = [],
    cc_includes = [],
)
ros.additional_deb(
    hub_name = "humble",
    name = "proto2ros",
    # TODO(astout) add arm64
    urls_by_arch = {"amd64": ["https://github.com/bdaiinstitute/bosdyn_msgs/releases/download/5.0.0/ros-humble-proto2ros_1.0.0-0jammy_amd64.deb"]},
    sha256_by_arch = {"amd64": "6d2858d4e2014fa4ac1b207a2d95a62956afb2b51944ccfa3128ee7ec8c57456"},
    dependencies = [],
    cc_includes = [],
)


use_repo(ros, "humble")


# nasty bazel dependency management quirk:
# if we bring in ros_utilities as a bazel_dep, we get a hub repository name collision, because
# ros_utilities was also bazelized using r^3. We have to bring it in as a git_repository,
# which causes it to resolve the references to @humble to OUR @humble.
# BUT, that means we need to manually include ros_utilities' transitive dependencies,
# both at the bazel_dep level, and at the jammy.yaml level
# this is acknowledged to be a terrible developer experience and not scaleable--it's a big TODO.

# bazel_dep(name = "ros_utilities", version = "git-override") # version string is not used in git override 
# git_override(
#     module_name = "ros_utilities",
#     commit = "4e648cacf2129f23379a023816d72ee7dac5295f",
#     remote = "https://github.com/bdaiinstitute/ros_utilities.git",
# )
git_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
git_repository(
    name = "ros_utilities",
    commit = "146b0652421c73cfa513a3f3f9a2f09c3d5be99a",
    remote = "https://github.com/bdaiinstitute/ros_utilities.git",
)

git_repository(
    name = "spot_wrapper",
    build_file = "//:deps/spot_wrapper/spot_wrapper.BUILD.bazel",
    commit = "041e5a33913367aaf2c6aaca1888dd58ee655560",
    remote = "https://github.com/bdaiinstitute/spot_wrapper.git",
    patches = ["deps/spot_wrapper_requirements.patch"],
    patch_args = ["-p1"],
)

git_repository(
    name = "spot_description",
    build_file = "//:deps/spot_description/spot_description.BUILD.bazel",
    commit = "a38f992450a903ddb960d64d13d4c505b173a4b6",
    remote = "https://github.com/bdaiinstitute/spot_description.git",
)
